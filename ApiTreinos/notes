Entendido! Vou criar os **JSONs completos** para o **frontend** e o **backend**, incluindo as dependÃªncias necessÃ¡rias e exemplos de estrutura de arquivos. Isso ajudarÃ¡ a configurar os projetos. 

---

### **1. Backend: `package.json`**
```json
{
  "name": "treino-backend",
  "version": "1.0.0",
  "description": "API para gerenciamento de treinos e progresso fÃ­sico",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "dotenv": "^16.3.1",
    "cors": "^2.8.5",
    "body-parser": "^1.20.2",
    "jsonwebtoken": "^9.2.1",
    "bcryptjs": "^2.4.3",
    "mysql2": "^3.6.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.22"
  },
  "author": "Anderson Reis",
  "license": "MIT"
}
```

#### **Estrutura do Backend**
```
backend/
  â”œâ”€â”€ server.js
  â”œâ”€â”€ routes/
  â”‚   â”œâ”€â”€ userRoutes.js
  â”‚   â”œâ”€â”€ exerciseRoutes.js
  â”‚   â”œâ”€â”€ workoutRoutes.js
  â”‚   â””â”€â”€ sessionRoutes.js
  â”œâ”€â”€ controllers/
  â”‚   â”œâ”€â”€ userController.js
  â”‚   â”œâ”€â”€ exerciseController.js
  â”‚   â”œâ”€â”€ workoutController.js
  â”‚   â””â”€â”€ sessionController.js
  â”œâ”€â”€ models/
  â”‚   â”œâ”€â”€ userModel.js
  â”‚   â”œâ”€â”€ exerciseModel.js
  â”‚   â”œâ”€â”€ workoutModel.js
  â”‚   â””â”€â”€ sessionModel.js
  â”œâ”€â”€ config/
  â”‚   â””â”€â”€ db.js
  â””â”€â”€ .env
```

---

### **2. Frontend: `package.json`**
```json
{
  "name": "treino-frontend",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.1",
    "@mui/icons-material": "^5.14.2",
    "@mui/material": "^5.14.2",
    "axios": "^1.5.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.16.0",
    "react-scripts": "5.0.1",
    "chart.js": "^4.4.0",
    "react-chartjs-2": "^5.2.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "author": "Anderson Reis",
  "license": "MIT"
}
```

#### **Estrutura do Frontend**
```
frontend/
  â”œâ”€â”€ public/
  â”‚   â”œâ”€â”€ index.html
  â”‚   â””â”€â”€ favicon.ico
  â”œâ”€â”€ src/
  â”‚   â”œâ”€â”€ components/
  â”‚   â”‚   â”œâ”€â”€ FormLogin.jsx
  â”‚   â”‚   â”œâ”€â”€ DashboardCard.jsx
  â”‚   â”‚   â”œâ”€â”€ ExerciseTable.jsx
  â”‚   â”‚   â”œâ”€â”€ ProgressChart.jsx
  â”‚   â”‚   â””â”€â”€ RegisterForm.jsx
  â”‚   â”œâ”€â”€ pages/
  â”‚   â”‚   â”œâ”€â”€ LoginPage.jsx
  â”‚   â”‚   â”œâ”€â”€ DashboardPage.jsx
  â”‚   â”‚   â”œâ”€â”€ ExercisesPage.jsx
  â”‚   â”‚   â”œâ”€â”€ RegisterSessionPage.jsx
  â”‚   â”‚   â””â”€â”€ ProgressPage.jsx
  â”‚   â”œâ”€â”€ services/
  â”‚   â”‚   â””â”€â”€ api.js
  â”‚   â”œâ”€â”€ App.jsx
  â”‚   â”œâ”€â”€ index.js
  â”‚   â””â”€â”€ styles/
  â”‚       â””â”€â”€ global.css
```

---

### **Como Configurar**
#### **Backend**
1. Crie uma pasta `backend`.
2. Adicione o arquivo `package.json` do backend.
3. Rode o comando:
   ```bash
   npm install
   ```
4. Configure as rotas, controladores, e banco de dados conforme a estrutura.

#### **Frontend**
1. Crie uma pasta `frontend`.
2. Adicione o arquivo `package.json` do frontend.
3. Rode o comando:
   ```bash
   npm install
   ```
4. Inicie o projeto com:
   ```bash
   npm start
   ```

---

Precisa de ajuda para implementar algum detalhe ou quer que eu comece com um dos arquivos? ðŸš€